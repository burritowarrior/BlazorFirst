@page "/SimpleList"
@using Models

<style type="text/css">
.right { text-align: right; }
.light-green { background-color: #CCEBC5; }
.blackText { color: #000; }
</style>

<h3>SimpleList</h3>

<!-- Sample Comment goes here... //-->
<table class="table table-striped" id="example">
    <thead>
        <tr>
            <th>State Name</th>
            <th>Abbreviation</th>
            <th>Capital</th>
            <th>Population</th>
            <th>Entered</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in data)
        {
            <tr>
                <td>@item.StateName</td>
                <td>@item.Abbreviation</td>
                <td class="@(DoSomething(@item.Capital))">@item.Capital</td>
                <td class="right">@item.Population.ToString("#,0")</td>
                <td>@item.DateEntered.ToString("MM-dd-yyyy")</td>
            </tr>
        }
    </tbody>
</table>

@code {

    [Inject]
    public HttpClient HttpClient { get; set; }

    public List<StatesMeta> data = new List<StatesMeta>();

    // OnInitializedAsync is one of the four Blazor component life cycle events
    protected override async Task OnInitializedAsync()
    {
        // AllStates = new StatesMeta[];

        // JSON Helper Methods
        // AllStates = await HttpClient.GetFromJsonAsync<StatesMeta[]>("api/state/getallstates");

        data = await HttpClient.GetFromJsonAsync<List<StatesMeta>>("api/state/getallstates");
    }

    private string DoSomething(string currentValue) 
    {
        Console.WriteLine(currentValue);
        return currentValue.StartsWith("H") 
            ? @"light-green" : "blackText";
    }

}
